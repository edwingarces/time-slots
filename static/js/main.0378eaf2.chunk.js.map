{"version":3,"sources":["components/Message.tsx","utils/index.ts","components/Table.tsx","initialState.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Message","message","className","findElementIndex","array","searchId","findIndex","id","getAvailableLength","filter","el","available","length","Table","timeSlots","users","onSelect","map","slot","index","motorcyclists","onClick","time","user","name","motorcyclistsList","timeSlotsList","usersList","initialNotification","type","App","useState","setTimeSlots","selectedUser","setSelectedUser","selectedTimeSlot","setSelectedTimeSlot","setMotorcyclists","notification","setNotification","useEffect","timeout","setTimeout","clearTimeout","value","onChange","target","parseInt","immutableTimeSlots","availableMotorcyclists","userInSlot","isPossibleToAssign","immutableMotorcyclists","firstNotAvailableMotorcyclists","pop","motorcyclistIndex","slotUsers","unassignTimeSlot","firstAvailable","firstAvailableIndex","push","assignTimeSlot","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0MAaeA,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACd,qBAAKA,UAAS,uBAAkBA,GAAhC,SACE,4BAAID,OCIKE,EAAmB,SAC9BC,EACAC,GAF8B,OAI9BD,EAAME,WAAU,qBAAGC,KAAgBF,MAGxBG,EAAqB,SAChCJ,GADgC,OAGhCA,EAAMK,QAAO,SAACC,GAAD,OAAQA,EAAGC,aAAWC,QCuBtBC,EAnCD,SAAC,GAAD,IACZC,EADY,EACZA,UACAC,EAFY,EAEZA,MACAC,EAHY,EAGZA,SAHY,OAKZ,kCACE,gCACE,+BACE,yCAGA,8CAGA,8CAKJ,gCACGF,EAAUG,KAAI,SAACC,EAAMC,GAAP,OACb,qBAEEjB,UAAS,oBAAeM,EAAmBU,EAAKE,eAAiB,EAAI,aAAe,SACpFC,QAAS,kBAAML,EAASG,IAH1B,UAKE,6BAAKD,EAAKI,OACV,uCAAQ,EAAId,EAAmBU,EAAKE,eAApC,gBACA,6BAAKF,EAAKH,MAAME,KAAI,SAACM,GAAD,iBDjC5BnB,ECiCqDW,EDhCrDV,ECgC4DkB,ED9B9CnB,EAAMK,QAAO,qBAAGF,KAAgBF,KACjC,IC6BqDmB,KAAtC,MDlCH,IACzBpB,EACAC,SC0Bac,YC1BFM,EAAyC,CACpD,CACElB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,kBAER,CACEjB,GAAI,EACJI,WAAW,EACXa,KAAM,mBAIGE,EAAiC,CAC5C,CACEJ,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,IAET,CACEO,KAAM,QACNF,cAAeK,EACfV,MAAO,KAIEY,EAAyB,CACpC,CACEpB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,aAER,CACEjB,GAAI,EACJiB,KAAM,cAIGI,EAAoC,CAC/C3B,QAAS,aACT4B,KAAM,WCvCOC,EAzKH,WAAO,IAAD,EACkBC,mBAA0BL,GAD5C,mBACTZ,EADS,KACEkB,EADF,KAEVjB,EAAQY,EAFE,EAGwBI,mBAAiB,GAH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","file":"static/js/main.0378eaf2.chunk.js","sourcesContent":["import React from 'react';\n\ntype MessageProps = {\n  message: string\n  className: string\n}\n\nconst Message = ({ message, className }: MessageProps) => (\n  <div className={`App__Message ${className}`}>\n    <p>{message}</p>\n  </div>\n);\n\nexport default Message;\n","import {\n  Motorcyclist,\n  User,\n} from '../index.d';\n\nexport const findElement = (\n  array: Array<Motorcyclist | User>,\n  searchId: number | undefined,\n) => {\n  const found = array.filter(({ id }) => id === searchId);\n  return found[0];\n};\n\nexport const findElementIndex = (\n  array: Array<Motorcyclist | User>,\n  searchId: number | undefined,\n) => (\n  array.findIndex(({ id }) => id === searchId)\n);\n\nexport const getAvailableLength = (\n  array: Array<Motorcyclist>,\n) => (\n  array.filter((el) => el.available).length\n);\n","import React from 'react';\nimport { findElement, getAvailableLength } from '../utils';\nimport { TimeSlot, User } from '../index.d';\n\ntype TableProps = {\n  timeSlots: Array<TimeSlot>\n  users: Array<User>\n  // eslint-disable-next-line no-unused-vars\n  onSelect: (i: number) => void\n}\n\nconst Table = ({\n  timeSlots,\n  users,\n  onSelect,\n}: TableProps) => (\n  <table>\n    <thead>\n      <tr>\n        <th>\n          Horario\n        </th>\n        <th>\n          Motociclista\n        </th>\n        <th>\n          Usuario\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      {timeSlots.map((slot, index) => (\n        <tr\n          key={index}\n          className={`Table__Row${getAvailableLength(slot.motorcyclists) > 0 ? ' available' : ' full'}`}\n          onClick={() => onSelect(index)}\n        >\n          <td>{slot.time}</td>\n          <td>{`${8 - getAvailableLength(slot.motorcyclists)} Asignados`}</td>\n          <td>{slot.users.map((user) => `${findElement(users, user).name}, `)}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default Table;\n","import {\n  TimeSlot,\n  Motorcyclist,\n  User,\n  Notification,\n} from './index.d';\n\nexport const motorcyclistsList: Array<Motorcyclist> = [\n  {\n    id: 1,\n    available: true,\n    name: 'Motociclista 1',\n  },\n  {\n    id: 2,\n    available: true,\n    name: 'Motociclista 2',\n  },\n  {\n    id: 3,\n    available: true,\n    name: 'Motociclista 3',\n  },\n  {\n    id: 4,\n    available: true,\n    name: 'Motociclista 4',\n  },\n  {\n    id: 5,\n    available: true,\n    name: 'Motociclista 5',\n  },\n  {\n    id: 6,\n    available: true,\n    name: 'Motociclista 6',\n  },\n  {\n    id: 7,\n    available: true,\n    name: 'Motociclista 7',\n  },\n  {\n    id: 8,\n    available: true,\n    name: 'Motociclista 8',\n  },\n];\n\nexport const timeSlotsList: Array<TimeSlot> = [\n  {\n    time: '08:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '08:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '09:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '09:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '10:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '10:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '11:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '11:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '12:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '12:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '13:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '13:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '14:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '14:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '15:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '15:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '16:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '16:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '17:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '17:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '18:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '18:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '19:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '19:30',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n  {\n    time: '20:00',\n    motorcyclists: motorcyclistsList,\n    users: [],\n  },\n];\n\nexport const usersList: Array<User> = [\n  {\n    id: 1,\n    name: 'Usuario 1',\n  },\n  {\n    id: 2,\n    name: 'Usuario 2',\n  },\n  {\n    id: 3,\n    name: 'Usuario 3',\n  },\n  {\n    id: 4,\n    name: 'Usuario 4',\n  },\n  {\n    id: 5,\n    name: 'Usuario 5',\n  },\n  {\n    id: 6,\n    name: 'Usuario 6',\n  },\n  {\n    id: 7,\n    name: 'Usuario 7',\n  },\n  {\n    id: 8,\n    name: 'Usuario 8',\n  },\n];\n\nexport const initialNotification: Notification = {\n  message: 'Bienvenido',\n  type: 'success',\n};\n","import React, { useState, useEffect } from 'react';\nimport Message from './components/Message';\nimport Table from './components/Table';\nimport { timeSlotsList, usersList, initialNotification } from './initialState';\nimport { TimeSlot, Motorcyclist, Notification } from './index.d';\nimport { findElementIndex } from './utils';\n\nconst App = () => {\n  const [timeSlots, setTimeSlots] = useState<Array<TimeSlot>>(timeSlotsList);\n  const users = usersList;\n  const [selectedUser, setSelectedUser] = useState<number>(1);\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState<string>('08:00');\n  const [\n    motorcyclists,\n    setMotorcyclists,\n  ] = useState<Array<Motorcyclist>>(timeSlots[0].motorcyclists);\n  const [notification, setNotification] = useState<Notification>(initialNotification);\n\n  const assignTimeSlot = (index: number) => {\n    const immutableTimeSlots = [...timeSlots];\n    const immutableMotorcyclists = [...immutableTimeSlots[index].motorcyclists];\n    const availableMotorcyclists = immutableMotorcyclists.filter(({ available }) => available);\n    const firstAvailable = availableMotorcyclists.pop();\n    const firstAvailableIndex = findElementIndex(immutableMotorcyclists, firstAvailable?.id);\n    const slotUsers = [...immutableTimeSlots[index].users];\n    slotUsers.push(selectedUser);\n    immutableMotorcyclists[firstAvailableIndex] = {\n      ...immutableMotorcyclists[firstAvailableIndex],\n      available: false,\n    };\n    immutableTimeSlots[index] = {\n      ...immutableTimeSlots[index],\n      motorcyclists: immutableMotorcyclists,\n      users: slotUsers,\n    };\n    setTimeSlots(immutableTimeSlots);\n    setMotorcyclists(immutableMotorcyclists);\n  };\n\n  const unassignTimeSlot = (index: number) => {\n    const immutableTimeSlots = [...timeSlots];\n    const immutableMotorcyclists = [...immutableTimeSlots[index].motorcyclists];\n    const notAvailableMotorcyclists = immutableMotorcyclists.filter(({ available }) => !available);\n    const firstNotAvailableMotorcyclists = notAvailableMotorcyclists.pop();\n    const motorcyclistIndex = findElementIndex(\n      immutableMotorcyclists,\n      firstNotAvailableMotorcyclists?.id,\n    );\n    const slotUsers = immutableTimeSlots[index].users.filter((user) => user !== selectedUser);\n    immutableMotorcyclists[motorcyclistIndex] = {\n      ...immutableMotorcyclists[motorcyclistIndex],\n      available: true,\n    };\n    immutableTimeSlots[index] = {\n      ...immutableTimeSlots[index],\n      motorcyclists: immutableMotorcyclists,\n      users: slotUsers,\n    };\n    setTimeSlots(immutableTimeSlots);\n    setMotorcyclists(immutableMotorcyclists);\n  };\n\n  const handleSelect = (index: number) => {\n    const immutableTimeSlots = [...timeSlots];\n    setSelectedTimeSlot(immutableTimeSlots[index].time);\n    setMotorcyclists(immutableTimeSlots[index].motorcyclists);\n    const availableMotorcyclists = immutableTimeSlots[index].motorcyclists.filter(\n      ({ available }) => available,\n    );\n    const userInSlot = immutableTimeSlots[index].users.filter((user) => user === selectedUser);\n    const isPossibleToAssign = availableMotorcyclists.length && !userInSlot.length;\n    const isPossibleToUnassign = availableMotorcyclists.length < 8\n    && userInSlot.length;\n    if (isPossibleToUnassign) {\n      unassignTimeSlot(index);\n      setNotification({\n        message: 'Se liberó un motociclista',\n        type: 'success',\n      });\n    } else if (isPossibleToAssign) {\n      assignTimeSlot(index);\n      setNotification({\n        message: 'Se asignó un motociclista',\n        type: 'success',\n      });\n    } else if (!availableMotorcyclists.length) {\n      setNotification({\n        message: 'No hay más motociclistas disponibles',\n        type: 'danger',\n      });\n    }\n  };\n\n  const handleSelectUser = ({ target }: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = target;\n    setSelectedUser(parseInt(value, 10));\n    setNotification({\n      message: 'Cambio de usuario',\n      type: 'success',\n    });\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setNotification({\n        ...notification,\n        type: 'out',\n      });\n    }, 2000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // eslint-disable-next-line no-undef\n    let timeout: NodeJS.Timeout;\n    if (notification.type !== 'out') {\n      timeout = setTimeout(() => {\n        setNotification({\n          ...notification,\n          type: 'out',\n        });\n      }, 2000);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [notification]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__Header\">\n        <h1>Tramos horarios</h1>\n        <h2>Seleccione un usuario</h2>\n        <select\n          name=\"users\"\n          id=\"users\"\n          value={selectedUser}\n          onChange={handleSelectUser}\n        >\n          {users.map(({ id, name }, index) => {\n            if (id !== 0) return <option key={index} value={id}>{name}</option>;\n            return null;\n          })}\n        </select>\n      </div>\n      <div className=\"App__AssignmentSection\">\n        <Table\n          timeSlots={timeSlots}\n          users={users}\n          onSelect={handleSelect}\n        />\n        {motorcyclists\n          ? (\n            <div className=\"App__Motorcyclists\">\n              <h4>{`Motociclistas de las ${selectedTimeSlot}`}</h4>\n              {motorcyclists.map(({ name, available }, index) => (\n                <p key={index}>\n                  {name}\n                  {available ? ' Libre' : ' Asignado'}\n                </p>\n              ))}\n            </div>\n          )\n          : null}\n      </div>\n      <Message\n        message={notification.message}\n        className={notification.type}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}